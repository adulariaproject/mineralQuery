"use strict";$(".description-text--more").hide(),$(".main__input-cell--Fe2O3").hide(),$(".main__output-cell--Fe2O3").hide(),$(window).width()<600&&$(".main__output-area").hide();var NA2O_MOL=61.979,K2O_MOL=94.196,AL2O3_MOL=101.961,MGO_MOL=40.304,FEO_MOL=71.846,CAO_MOL=56.077,MNO_MOL=70.938,TIO2_MOL=79.879,SIO2_MOL=60.084,FE2O3_MOL=159.692,KEYCODES={ENTER:13,SPACE:32},thirteen=13,fifteen=15,twentyThree=23,fourtySix=46,Na2O=0,K2O=0,Al2O3=0,MgO=0,FeO=0,CaO=0,MnO=0,TiO2=0,SiO2=0;$("#Na2O-input").on("input",function(){Na2O=this.value}),$("#K2O-input").on("input",function(){K2O=this.value}),$("#Al2O3-input").on("input",function(){Al2O3=this.value}),$("#MgO-input").on("input",function(){MgO=this.value}),$("#FeO-input").on("input",function(){FeO=this.value}),$("#Fe2O3-input").on("input",function(){Fe2O3=this.value}),$("#CaO-input").on("input",function(){CaO=this.value}),$("#MnO-input").on("input",function(){MnO=this.value}),$("#TiO2-input").on("input",function(){TiO2=this.value}),$("#SiO2-input").on("input",function(){SiO2=this.value});var calculate=function(){function t(t,e){return t/e}function e(){return(O+c+r+p+s+f+m+_+d)/fifteen}function u(t){return t/((g+V+b+C+N+K+E+X+y)/mineralSelectValueX)}function n(){return 23==mineralSelectValueX?u(F)+u(w)+u(T)+u(S)+u(L):6==mineralSelectValueX||12==mineralSelectValueX?u(h)+u(x)+u(S)+u(F)+u(w)+u(v)+u(A)+u(T)+u(L):(console.log("wrong select value!"),!1)}function i(){return mineralSelectValueT/n()}function l(){return 2*mineralSelectValueX*(1-i())}function a(t){return 0===t?t:t.toFixed(2)}var o=1.1113*FeO,O=t(Na2O,NA2O_MOL),c=t(K2O,K2O_MOL),r=t(Al2O3,AL2O3_MOL),p=t(MgO,MGO_MOL),s=t(FeO,FEO_MOL),f=t(CaO,CAO_MOL),m=t(MnO,MNO_MOL),_=t(TiO2,TIO2_MOL),d=t(SiO2,SIO2_MOL),M=o/FE2O3_MOL,h=2*O,x=2*c,S=2*r,F=p,w=s,v=f,A=m,L=_,T=d,g=O,V=c,b=3*r,C=p,N=s,K=f,E=m,X=2*_,y=2*d,D=u(h),U=u(x),k=u(S),I=u(F),G=u(w),P=u(v),R=u(A),Y=u(L),j=u(T),q=u(M),z=D*i(),B=U*i(),H=k*i(),J=I*i(),Q=G*i(),W=P*i(),Z=R*i(),tt=Y*i(),et=j*i(),ut=Q-l();e(),e(),e(),e(),e(),e(),e(),e(),e();n()<=mineralSelectValueT?($(".main__input-cell--Fe2O3").slideUp("fast"),$(".main__output-cell--Fe2O3").slideUp("fast"),console.log("тут апфу! и все охуенно пашет !!"),$("#Na2O-output").text(a(D)),$("#K2O-output").text(a(U)),$("#Al2O3-output").text(a(k)),$("#MgO-output").text(a(I)),$("#FeO-output").text(a(G)),$("#CaO-output").text(a(P)),$("#MnO-output").text(a(R)),$("#TiO2-output").text(a(Y)),$("#SiO2-output").text(a(j))):n()>mineralSelectValueT&&0<l()?(600<=$(window).width()&&$(".main__input-cell--Fe2O3").slideDown("fast"),$(".main__output-cell--Fe2O3").slideDown("fast"),console.log("тут корр! и все охуенно пашет !!"),$("#Na2O-output").text(a(z)),$("#K2O-output").text(a(B)),$("#Al2O3-output").text(a(H)),$("#MgO-output").text(a(J)),$("#FeO-output").text(a(ut)),$("#Fe2O3-output").text(a(l())),$("#CaO-output").text(a(W)),$("#MnO-output").text(a(Z)),$("#TiO2-output").text(a(tt)),$("#SiO2-output").text(a(et))):n()>mineralSelectValueT&&l()<0&&(600<=$(window).width()&&$(".main__input-cell--Fe2O3").slideDown("fast"),$(".main__output-cell--Fe2O3").slideDown("fast"),console.log("тут ферум"),$("#Na2O-output").text(a(z)),$("#K2O-output").text(a(B)),$("#Al2O3-output").text(a(k)),$("#MgO-output").text(a(J)),$("#FeO-output").text(a(q)),$("#Fe2O3-output").text(a(ut)),$("#CaO-output").text(a(W)),$("#MnO-output").text(a(Z)),$("#TiO2-output").text(a(tt)),$("#SiO2-output").text(a(et))),$(window).width()<600&&$(".main__output-area").slideDown("fast",function(){$("html, body").animate({scrollTop:$(document).height()},"fast")})},mineralSelectValueX=+$("#mineral-select")[0].value,mineralSelectValueT=13;$("#mineral-select").on("change",function(){23==(mineralSelectValueX=+$("#mineral-select")[0].value)?mineralSelectValueT=13:6==mineralSelectValueX?mineralSelectValueT=4:12==mineralSelectValueX&&(mineralSelectValueT=8)});var clear=function(){SiO2=TiO2=MnO=CaO=FeO=MgO=Al2O3=K2O=Na2O=0,$(".main__input").val(""),$(".main__output").text(""),inputsArr.length=0,$(".main__input-cell--Fe2O3").slideUp("fast"),$(".main__output-cell--Fe2O3").slideUp("fast"),$(".button--calculate-ferrum").prop("disabled",!0),$(window).width()<600&&$(".main__output-area").slideUp("fast")};$(document).keydown(function(t){13==t.which&&2<=inputsArr.length&&$(".button--calculate-ferrum").addClass("button--calculate-ferrum-active")}),$(document).keyup(function(t){13==t.which&&2<=inputsArr.length&&($(".button--calculate-ferrum").removeClass("button--calculate-ferrum-active"),calculate())}),$(".button--calculate-ferrum").on("click",function(){calculate()}),$(".button--clear").on("click",function(){clear()}),$(".button--calculate-ferrum").prop("disabled",!0);var inputsArr=[];$(".main").on("input",function(t){t.preventDefault(),(inputsArr=Array.prototype.filter.call($(".main__input"),function(t){return""!==t.value})).length<2?$(".button--calculate-ferrum").prop("disabled",!0):2<=inputsArr.length&&$(".button--calculate-ferrum").prop("disabled",!1)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
